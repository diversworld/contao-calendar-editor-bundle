services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: false

  _instanceof:
    Contao\CoreBundle\Framework\FrameworkAwareInterface:
      calls:
        - [ setFramework, [ '@contao.framework' ] ]

    Symfony\Component\DependencyInjection\ContainerAwareInterface:
      calls:
        - [ setContainer, [ '@service_container' ] ]

  Diversworld\CalendarEditorBundle\Controller\Module\ModuleCalendarEdit:
    public: true
    arguments:
      $checkAuthService: '@Diversworld\CalendarEditorBundle\Services\CheckAuthService'
      $scopeMatcher: '@contao.routing.scope_matcher'
      $logger: '@monolog.logger.contao.general'
      $requestStack: '@request_stack'
      $objModule: null

  Diversworld\CalendarEditorBundle\Controller\Module\ModuleEventEditor:
    public: true
    arguments:
      $checkAuthService: '@Diversworld\CalendarEditorBundle\Services\CheckAuthService'
      $scopeMatcher: '@contao.routing.scope_matcher'
      $logger: '@monolog.logger.contao.general'
      $requestStack: '@request_stack'
      $connection: '@database_connection'
      $objModule: null
    tags:
      - { name: monolog.logger, channel: contao.general }
      - { name: contao.module }

  Diversworld\CalendarEditorBundle\Hooks\ListAllEventsHook:
    arguments:
      $checkAuthService: '@Diversworld\CalendarEditorBundle\Service\CheckAuthService'
      $user: '@security.token_storage'

  Diversworld\CalendarEditorBundle\Services\CheckAuthService:
    autowire: true
    autoconfigure: true
    public: true

  monolog.logger.contao.general:
    class: Monolog\Logger
    arguments: ['contao.general']
    tags:
      - { name: monolog.logger, channel: contao.general }
